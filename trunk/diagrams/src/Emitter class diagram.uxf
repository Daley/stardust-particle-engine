<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14

// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram.
// Edit element properties by modifying the text in this panel.
// Edit the files in the 'palettes' directory to create your own element palettes.
// Hold down Ctrl to select multiple elements.
// Press Del to delete elements.
// Press Ctrl-c to copy an element, and to store the whole UML diagram to the system clipboard.
// Select "Custom elements &gt; New..." to create new element types.
//
// This text will be stored with each diagram;  use it for notes.</help_text><element><type>com.umlet.element.base.Class</type><coordinates><x>260</x><y>70</y><w>290</w><h>340</h></coordinates><panel_attributes>Emitter
--
+ addInitializer(initializer:Initializer):void
+ removeInitializer(initializer:Initializer):void
+ clearInitializers():void
 
+ addAction(action:Action):void
+ removeAction(action:Action):void
+ clearActions():void
 
+ addParticles(particles:Array):void
+ removeParticles(particles:Array):void
+ clearParticles():void
 
+ step(e:Event = null):void
--
+ clock:Clock
+ stepTimeInterval:Number = 1
# actions:Array
# initializers:Array
- particles:Array</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>580</x><y>220</y><w>120</w><h>60</h></coordinates><panel_attributes>Clock
--
+ getTicks():int
--</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>760</x><y>220</y><w>220</w><h>70</h></coordinates><panel_attributes>Initializer
--
+ initialize(particle:Particle):void
--
+ priority:int</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>529</x><y>260</y><w>131</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes><additional_attributes>20;70;111;70;111;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>529</x><y>170</y><w>221</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>20;180;201;180;201;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>530</x><y>270</y><w>360</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>20;100;340;100;340;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>580</x><y>70</y><w>400</w><h>120</h></coordinates><panel_attributes>Action
--
+ mask:int
+ priority:int
--
+ postUpdate(emitter:Emitter, time:Number):void
+ preUpdate(emitter:Emitter, time:Number):void
+ update(emitter:Emitter, particle:Particle, time:Number):void</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>640</x><y>440</y><w>180</w><h>340</h></coordinates><panel_attributes>Particle
--
+ mask:int
+ isDead:Boolean
+ target:*
 
+ alpha:Number
+ collisionRadius:Number
 
+ initAlpha:Number
+ alpha:Number
 
+ initLife:Number
+ life:Number
 
+ initScale:Number
+ scale:Number
 
+ mass:Number
--
+ destroy():void</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>530</x><y>370</y><w>220</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>20;20;200;20;200;70</additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>260</x><y>440</y><w>340</w><h>370</h></coordinates><panel_attributes>newParitcles = create("clock.getTicks() particles");
 
for each (p:Particle in newParticles) {
    for each (init:Initializer in this.initializers) {
        init.initialize(p);
    }
}
 
for each (act:Action in this.actions) {
    act.preUpdate(this, this.stepTimeInterval);
}
 
for each (act:Action in this.actions) {
    for each (p:Particle in this.particles) {
        act.update(this, p, this.stepTimeInterval);
    }
}
 
for each (act:Action in this.actions) {
    act.postUpdate(this, this.stepTimeInterval);
}</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>200</x><y>290</y><w>80</w><h>200</h></coordinates><panel_attributes/><additional_attributes>60;180;20;180;20;20;60;20</additional_attributes></element></umlet_diagram>